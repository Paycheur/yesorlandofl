//
// Utility classes
// --------------------------------------------------


//colors

.black, .hover-black:hover {
  color: #000;
}


.gray-sub {
  color: @gray-light;
}

.gray {
  color: @gray;
}


.gray-light  {
  color: @gray-light;
}
.border-top-2px-blue {
  border-top: 2px solid @blue;
}

.border-top-2px-white {
  border-top: 2px solid white;
}

.border-top-5px-white {
  border-top: 5px solid white;
}

.border-top-2px-red {
  border-top: 2px solid @brand-danger;
}
.border-top-gray-light{
  border-top: 1px solid lighten(@gray-light, 33%);
}

.border-bottom-gray-light{
  border-bottom: 1px solid lighten(@gray-light, 23%);
}

.border-right-gray-light {
  border-right: 1px solid lighten(@gray-light, 33%);
}

.border-5px, .border-img, .border-img-white  {
  border: 5px;
  border-style: solid;
}

.border-img-white{
  border-color: white;
}

.border-3px, .border-img-small  {
  border: 2px;
  border-style: solid;
}

.border-1px-gray{
  border: 1px;
  border-style: solid;
  border-color:#DBDBDB;
}

.border-top-0 {
  border-top: 0;
}


.border-bottom-gray-light{
  border-bottom: 1px solid lighten(@gray-light, 33%);
}

.border-gray-light, .border-img , .border-img-small  {
  border-color: lighten(@gray-light, 33%);
}




.bg-gray-light {
  background-color: lighten(@gray-light, 35%);
}

.bg-gray-lighter {
  background-color: darken(white, 2%);
}


.bg-gray-90 {
  background-color: rgba(0,0,0,.1)
}


.bg-gray, .bg-gray-hover:hover {
  background-color: @gray;
}

.bg-fb {
  background-color: #3b5998;
}
.bg-twitter {
  background-color: #00aced;
}

.bg-googleplus {
  background-color: #dd4b39;
}

.bg-youtube {
  background-color: #bb0000;
}


.bg-pinterest {
  background-color: #cb2027;
}

.bg-youtube {
  background-color: #bb0000;
}
.bg-pinky {
  background-color: #D10179;
}

.bg-blue {
  background-color: @blue;
}

.bg-grey {
  background-color: @gray;
}

.bg-pure {
  background-color: white;
}
.bg-white {
  background-color: white;
  border-top: 1px solid #CFCFCB;
  box-shadow: inset 0 2px 0px rgba(0,0,0,.05);
}

.color-white, .white {
  color: #fff;
  &:hover{
    color:darken(white, 10%);
  }
}

.gray-light {
  color: #f5f5f5;
  &:hover{
    color:white;
  }
}

.color-sec {
  color:@brand-warning;
  &:hover{
    color:lighten(@brand-warning, 20%);
  }
}

select, option {
  line-height: 24px;
  margin-bottom: 20px;
}

// Margins


.padding-zero {
  padding: 0;
}

.btn-padding  {
  padding: 6px 12px;
}
.overide-padding {
  margin-left: -15px;
}

.margin-zero, .no-margins {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

.margin-top-zero {
  margin-top: 0;
}

.margin-bottom-zero {
  margin-bottom: 0;
}


.padding-r-l-1em {
  padding-left: 1em;
  padding-right: 1em;

}

.padding-r-l-0 {
  padding-left: 0;
  padding-right: 0;
}


.padding-r-l-2em {
  padding-left: 2em;
  padding-right: 2em;

}

.padding-r-l-0 {
  padding-left: 0;
  padding-right: 0;
}


.padding-l-1em {
  padding-left: 1em;
}




.padding-after-navbar{
  padding-top: 40px;
}

.padding-05em {
  padding-top: .5em;
  padding-bottom: .5em;
}
.padding-05em {
  padding-top: .5em;
  padding-bottom: .5em;
}
.padding-1em {
  padding-top: 1em;
  padding-bottom: 1em;
}

.padding-2em {
  padding-top: 2em;
  padding-bottom: 2em;
}

.padding-3em {
  padding-top: 3em;
  padding-bottom: 3em;
}

.padding-4em {
  padding-top: 4em;
  padding-bottom: 4em;
}



.padding-top-05em {
  padding-top: .5em;
}
.padding-top-1em {
  padding-top: 1em;
}

.padding-top-2em {
  padding-top: 2em;
}

.padding-top-3em {
  padding-top: 3em;
}

.padding-top-4em {
  padding-top: 4em;
}

.padding-bottom-2em {
  padding-bottom: 2em;
}

.padding-bottom-3em {
  padding-bottom: 3em;
}
.margin-after-navbar{
  margin-top: 40px;
}


//margins


.marign-05em {
  marign-top: .5em;
  marign-bottom: .5em;
}
.marign-1em {
  marign-top: 1em;
  marign-bottom: 1em;
}

.marign-2em {
  marign-top: 2em;
  marign-bottom: 2em;
}

.marign-3em {
  marign-top: 3em;
  marign-bottom: 3em;
}

.marign-4em {
  marign-top: 4em;
  marign-bottom: 4em;
}
.margin-top-1em {
  margin-top: 1em;
}

.margin-top-2em {
  margin-top: 2em;
}

.margin-top-3em {
  margin-top: 3em;
}

.margin-top-4em {
  margin-top: 4em;
}

.margin-bottom-1em {
  margin-bottom: 1em;
}

.margin-bottom-2em {
  margin-bottom: 2em;
}

.margin-bottom-3em {
  margin-bottom: 3em;
}

.margin-bottom-4em {
  margin-bottom: 4em;
}
//height

.height-100 {
  height: 100%;
}

.height-75 {
  height: 75%;
}

.height-50 {
  height: 50%;
}



.w-h-350px {
  width: 350px;
  height: 350px;
}


.w-h-200px {
  width: 200px;
  height: 200px;
}

.w-h-100px {
  width: 100px;
  height: 100px;
}
//colors



.bold {
  font-weight: bold;
}

.normal {
  font-weight: normal;
}

.italic {
  font-style: italic;
}


.serif {
  font-family: @font-family-serif;
}

.sans {
  font-family: @font-family-sans-serif;
}


// linehight


.lh-80 {
  line-height: 80%;
}

.lh-90 {
  line-height: 90%;
}
.lh-100 {
  line-height: 100%;
}

.lh-110 {
  line-height: 110%;
}

.lh-120 {
  line-height: 120%;
}

.lh-130 {
  line-height: 130%;
}

.lh-140 {
  line-height: 140%;
}

.lh-150 {
  line-height: 150%;
}

// font-size

.size-20 {
  font-size: 20px;
}

.size-18 {
  font-size: 18px;
}

.size-16 {
  font-size: 16px;
}

.size-14 {
  font-size: 14px;
}

.size-13 {
  font-size: 13px;
}

.size-12 {
  font-size: 12px;
}


// opacity

.opacity-20 {
  opacity: .2;
}
.opacity-50 {
  opacity: .5;
}

.opacity-90 {
  opacity: .9;
}

ul.no-bullets {
  list-style-type: none;
  margin:0;
  padding: 0;
}

ul.dotted{
  li {
    border-bottom: 1px dotted @gray-light;
    padding-bottom: 10px;
    margin-bottom: 10px;
    &:last-child {
      border: 0;
    }
  }
}


.transition{
  -webkit-transition: all 1s ease;
  -moz-transition: all 1s ease;
  -ms-transition: all 1s ease;
  -o-transition: all 1s ease;
  transition: all 1s ease;
}


.txt-center {
  text-align: center;
}

.txt-left {
  text-align: left;
}


.txt-right {
  text-align: right;
}

.txt-justify {
  text-align: justify;
}
.relative {
  position: relative;
}

.display-block {
  display: block;
}

.inline-block{
  display: inline-block;
}


.display-inline {
  display: inline;
}

.display-none {
  display: none;
}

.block-center {
  margin-left: auto;
  margin-right: auto;
}
.ov-h, .ovh {
  overflow: hidden;
}
.list-inline {
  li {
    display: inline-block;
    margin-right: 5px;
    padding-left: 0;
    &:last-child{
    margin-right: 0;
    }
  }
}



.list-no-bullets {
  list-style-type: none;
  margin-left: 0;
  padding-left: 0;
}

.cap, .CAP, .Cap {
  text-transform: uppercase;
}

// Floats
// -------------------------

.clearfix {
  .clearfix();
}
.pull-right, .fr {
  float: right;
}
.pull-left, .fl {
  float: left;
}


// Toggling content
// -------------------------

.hide {
  display: none !important;
}
.show {
  display: block !important;
}
.invisible {
  visibility: hidden;
}
.text-hide {
  .hide-text();
}


// For Affix plugin
// -------------------------

.affix {
  position: fixed;
}


// .cssanimations
.cssanimations  .translate {
     opacity:0;  /* make things invisible upon start */
     animation:translate ease-in 1; /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */

     animation-fill-mode:forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/

     animation-duration:1s;
     animation-delay: 1s;

    -webkit-transform: translate(0,-1em);

     -webkit-animation:translate ease-in 1;
     -webkit-animation-fill-mode:forwards;
     -webkit-animation-duration:1s;
     -webkit-animation-delay: .5s;
 }


 @keyframes translate { from { opacity:0;  transform: translate(0,-1em); } to { opacity:1; transform: translate(0,0em); } }

 @-webkit-keyframes translate /* Safari and Chrome */
 { from { opacity:0; -webkit-transform: translate(0,-1em); } to { opacity:1;  -webkit-transform: translate(0,0em);} }



 // .cssanimations
 .cssanimations  .translate-always {

      position: relative;
      display: block;
      float: left;
      margin-right: 4px;

      animation:translatealways ease-in 1; /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */

      animation-duration:600ms;
      animation-delay: 1s;
      animation-iteration-count:infinite;

     -webkit-transform: translate(0,-.5em);

     -webkit-animation-iteration-count:infinite;

      -webkit-animation:translatealways ease-in 1;
      -webkit-animation-duration:600ms;
      -webkit-animation-delay: .5s;



      animation-timing-function:linear;
      animation-delay:2s;
      animation-iteration-count:infinite;
      animation-play-state:running;

      /* Safari and Chrome: */
      -webkit-animation-timing-function:linear;
      -webkit-animation-iteration-count:infinite;
      -webkit-animation-direction:alternate;
      -webkit-animation-play-state:running;
  }


  @keyframes translatealways { from { transform: translate(0,-.5em); } to { opacity:1; transform: translate(0,0em); } }

  @-webkit-keyframes translatealways /* Safari and Chrome */
  { from {  -webkit-transform: translate(0,-.5em); } to { opacity:1;  -webkit-transform: translate(0,0em);} }


  .cssanimations .active   .translate-always {

      top: 10px;
      -webkit-animation: none;
      -o-animation: none;
      animation: none;
  }


.cssanimations .fade-in {
       opacity:0;  /* make things invisible upon start */
       animation:fadeIn ease-in 1; /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */

       animation-fill-mode:forwards;  /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1)*/

       animation-duration:1s;
       animation-delay: 1s;

       -webkit-animation:fadeIn ease-in 1;
       -webkit-animation-fill-mode:forwards;
       -webkit-animation-duration:1s;
       -webkit-animation-delay: .5s;
   }


   @keyframes fadeIn { from { opacity:0; } to { opacity:1; } }

   @-webkit-keyframes fadeIn /* Safari and Chrome */
   { from { opacity:0; } to { opacity:1; } }



/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Image replacement
 */

.ir {
    background-color: transparent;
    border: 0;
    overflow: hidden;
    /* IE 6/7 fallback */
    *text-indent: -9999px;
}

.ir:before {
    content: "";
    display: block;
    width: 0;
    height: 150%;
}

/*
 * Hide from both screenreaders and browsers: h5bp.com/u
 */

.hidden {
    display: none !important;
    visibility: hidden;
}

/*
 * Hide only visually, but have it available for screenreaders: h5bp.com/v
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

/*
 * Extends the .visuallyhidden class to allow the element to be focusable
 * when navigated to via the keyboard: h5bp.com/p
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
}

/*
 * Hide visually and from screenreaders, but maintain layout
 */

.invisible {
    visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix:before,
.clearfix:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}

.clearfix:after {
    clear: both;
}

/*
 * For IE 6/7 only
 * Include this rule to trigger hasLayout and contain floats.
 */

.clearfix {
    *zoom: 1;
}

